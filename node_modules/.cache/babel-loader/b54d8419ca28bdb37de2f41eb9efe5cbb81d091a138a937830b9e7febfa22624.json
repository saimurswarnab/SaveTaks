{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\taskmate\\\\taskmate\\\\src\\\\componets\\\\ShowTask.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShowTask = () => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"showTask\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"head\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = ShowTask;\nvar _c;\n$RefreshReg$(_c, \"ShowTask\");","map":{"version":3,"names":["ShowTask","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Programming/taskmate/taskmate/src/componets/ShowTask.js"],"sourcesContent":["\r\n\r\nexport const ShowTask = () => {\r\n  return (\r\n    <section className=\"showTask\">\r\n        <div className=\"head\">\r\n            <div>\r\n                <span>Todo</span>\r\n                \r\n            </div>\r\n        </div>\r\n\r\n    </section>\r\n  )\r\n}\r\n"],"mappings":";;AAEA,OAAO,MAAMA,QAAQ,GAAGA,CAAA,KAAM;EAC5B,oBACEC,OAAA;IAASC,SAAS,EAAC,UAAU;IAAAC,QAAA,eACzBF,OAAA;MAAKC,SAAS,EAAC,MAAM;MAAAC,QAAA,eACjBF,OAAA;QAAAE,QAAA,eACIF,OAAA;UAAAE,QAAA,EAAM;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEd,CAAC;AAAAC,EAAA,GAZYR,QAAQ;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}